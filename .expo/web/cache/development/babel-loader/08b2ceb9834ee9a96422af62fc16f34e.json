{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/kyuyeon/Desktop/Charlie-app/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport MainTabScreen from \"./screens/MainTabScreen\";\nimport { DrawerContent } from \"./screens/DrawerContent\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport SupportScreen from \"./screens/SupportScreen\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport { AuthContext } from \"./components/context\";\nimport AsyncStorage from '@react-native-community/async-storage';\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _this = this;\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(foundUser[0].userToken);\n                userName = foundUser[0].username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {}\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, loginState.userToken !== null ? React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeDrawer\",\n    component: MainTabScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SettingScreen\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SupportScreen\",\n    component: SupportScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })) : React.createElement(RootStackScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/kyuyeon/Desktop/Charlie-app/App.js"],"names":["StatusBar","React","useEffect","NavigationContainer","createDrawerNavigator","MainTabScreen","DrawerContent","SettingsScreen","SupportScreen","RootStackScreen","AuthContext","AsyncStorage","Drawer","App","initialLoginState","isLoading","userName","userToken","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","username","setItem","console","log","signOut","removeItem","signUp","setTimeout","getItem","flex","justifyContent","alignItems","props","styles","StyleSheet","create","container","backgroundColor"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { View, StyleSheet, ActivityIndicator} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport MainTabScreen from './screens/MainTabScreen';\nimport { DrawerContent } from './screens/DrawerContent';\nimport SettingsScreen from './screens/SettingsScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport RootStackScreen from './screens/RootStackScreen';\nimport { AuthContext } from './components/context';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst Drawer = createDrawerNavigator();\n\n\nexport default function App() {\n  // reducer function\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  }\n\n  const loginReducer = (prevState, action) => {\n    switch(action.type){\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER':\n       return {\n        ...prevState,\n        userName: action.id,\n        userToken: action.token,\n        isLoading: false,\n       };\n    }\n  }\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  // sign in, sign out, sign up\n  const authContext = React.useMemo(() => ({\n    signIn: async(foundUser) => {\n      const userToken = String(foundUser[0].userToken);\n      const userName = foundUser[0].username;\n      try{\n        await AsyncStorage.setItem('userToken', userToken);\n      }catch(e){\n        console.log(e);\n      }\n      \n      dispatch({type: 'LOGIN', id: userName, token: userToken});\n    },\n    signOut: async() => {\n      try{\n        await AsyncStorage.removeItem('userToken');\n      }catch(e){\n        console.log(e);\n      }\n      dispatch( {type: 'LOGOUT'});\n    },\n    signUp: () => {\n      // TODO\n    },\n  }), []);\n\n  // retrieve token\n  useEffect(() => {\n    setTimeout(async() => {\n      let userToken;\n      userToken = null;\n      try{\n        userToken = await AsyncStorage.getItem('userToken');\n      }catch(e){\n        console.log(e);\n      }\n      dispatch({type: 'RETRIEVE_TOKEN', token: userToken});\n    }, 1000);\n  }, [])\n\n  if (loginState.isLoading){\n    return(\n      <View style={{flex:1, justifyContent:'center', alignItems:'center'}}>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    );\n  }\n  \n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        {loginState.userToken !== null ? (\n          <Drawer.Navigator drawerContent={props => <DrawerContent {...props}/>}>\n            <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} />\n            <Drawer.Screen name=\"SettingScreen\" component={SettingsScreen} />\n            <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\n          </Drawer.Navigator> \n        )\n        :\n          <RootStackScreen/>\n        }\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"module"}